{"version":3,"sources":["reducers/util.js","reducers/settings.js","reducers/Reducer.js","component/App/App.props.js","common/random.js","common/NoteGenerator.js","common/NoteRenderer.js","component/Staff/index.js","component/Staff/Staff.js","component/App/App.js","component/App/index.js","serviceWorker.js","reducers/root.js","store.js","index.js"],"names":["noop","type","payload","actionLog","method","action","message","prefix","exclude","Set","has","isString","isEmpty","startsWith","ActionLog","console","log","bind","warn","error","Settings","namespace","initialState","this","_initialState","actions","Map","validators","name","reducer","set","validator","get","err","defaultsDeep","state","oldObject","newValues","next","Object","assign","foo","toggle","settings","dispatch","randomInt","max","Math","floor","random","randomElement","array","length","clefs","notes","treble","root","second","third","bass","instance","clef","opts","options","defaults","noteSelection","Array","from","concat","randomClef","note","randomNote","renderNote","VF","Vex","Flow","div","document","createElement","renderer","Renderer","Backends","SVG","resize","context","getContext","Stave","addClef","setContext","draw","connector","StaveConnector","setType","brace","svg","StaveNote","keys","duration","voice","Voice","num_beats","beat_value","addTickables","Formatter","joinVoices","format","querySelector","window","btoa","XMLSerializer","serializeToString","Staff","component","src","alt","className","ConnectedApp","props","NoteGenerator","visible","onMouseDown","replace","toUpperCase","setState","prev","Component","App","reactRedux","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","rootReducer","combineReducers","settingsReducer","store","createStore","storedState","localStorage","getItem","JSON","parse","loadSavedState","subscribe","getState","setItem","stringify","saveStateDev","reset","removeItem","reload","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4f20bbb4.chunk.js","sourcesContent":["import isEmpty from 'lodash/isNil'\nimport isString from 'lodash/isString'\n\n/**\n * No operation action. Can be returned by action generators on invalid\n * payloads, etc.\n */\nexport const noop = { type: '', payload: {} }\n\n/**\n * Helper method for handling object updates within reducers.\n * @param {object} oldObject Object to update.\n * @param {object} newValues New values for the object.\n * @return {object} A copy of the old object with new values.\n */\nexport function updateObject (oldObject, newValues) {\n  return Object.assign({}, oldObject, newValues)\n}\n\n/**\n * Logs an action and message via the given logging method.\n * @param {function} method Logging method to use.\n * @param {object} action Redux action.\n * @param {string} message Log message.\n * @param {string} prefix Prefix filter.\n * @param {array<string>} exclude Actions to exclude from logging.\n */\nfunction actionLog (method, action, message = '', prefix = null, exclude = []) {\n  const excludeSet = new Set(exclude)\n  if (excludeSet.has(action.type)) {\n    return\n  }\n  if (isString(prefix) && !isEmpty(prefix) && !action.type.startsWith(prefix)) {\n    return\n  }\n  method(action.type, action.payload, message)\n}\n\n/**\n * Console logger for actions.\n * @author Ryan Sandor Richards\n */\nexport class ActionLog {\n  /**\n   * Logs the given redux action via `console.log`.\n   * @param {object} action Redux action to log.\n   * @param {string} message Message.\n   */\n  static log (action, message, prefix, exclude) {\n    actionLog(console.log.bind(console), action, message, prefix, exclude)\n  }\n\n  /**\n   * Logs the given redux action and message via `console.warn`.\n   * @param {object} action Redux action.\n   * @param {string} message Message.\n   */\n  static warn (action, message, prefix, exclude) {\n    actionLog(console.warn.bind(console), action, message, prefix, exclude)\n  }\n\n  /**\n   * Logs the given redux action and message via `console.error`.\n   * @param {object} action Redux action.\n   * @param {string} message Message.\n   */\n  static error (action, message, prefix, exclude) {\n    actionLog(console.error.bind(console), action, message, prefix, exclude)\n  }\n}\n","import Reducer from './Reducer'\n\nconst Settings = new Reducer('NesStudio/sprite', {\n  foo: 'bar'\n})\n\nconst toggle = Settings.action('toggle', (next, payload, action) => {\n  next.foo = next.foo === 'bar' ? 'baz' : 'bar'\n})\n\nexport default Settings.reducer\nexport { toggle }\n","import { ActionLog, noop, updateObject } from './util'\nimport defaultsDeep from 'lodash/defaultsDeep'\n\nexport default class Reducer {\n  constructor (namespace, initialState = {}) {\n    this.namespace = namespace\n    this._initialState = initialState\n    this.actions = new Map()\n    this.validators = new Map()\n    this.log = false\n  }\n\n  get initialState () {\n    return defaultsDeep({}, this._initialState)\n  }\n\n  toggleLog () {\n    this.log = !this.log\n  }\n\n  action (name, reducer) {\n    if (!reducer) {\n      return this.actions.get(name)\n    }\n    this.actions.set(`${this.namespace}/${name}`, reducer)\n    return (payload = {}) => {\n      const action = { type: `${this.namespace}/${name}`, payload }\n      try {\n        const validator = this.validators.get(name) || (() => { })\n        validator(payload)\n        return action\n      } catch (err) {\n        ActionLog.error(action, err)\n        return noop\n      }\n    }\n  }\n\n  validate (name, validator) {\n    this.validators.set(`${this.namespace}/${name}`, validator)\n  }\n\n  get reducer () {\n    return (state, action) => {\n      if (this.log) ActionLog.log(action)\n      const next = updateObject(state || this.initialState, {})\n      if (this.actions.has(action.type)) {\n        this.actions.get(action.type)(next, action.payload, action)\n      }\n      return next\n    }\n  }\n}\n","import * as reactRedux from 'react-redux'\nimport { toggle } from '../../reducers/settings'\n\nfunction state (state) {\n  return { settings: state.settings }\n}\n\nfunction dispatch (dispatch) {\n  return {\n    toggle: () => dispatch(toggle())\n  }\n}\n\nexport function connect (component) {\n  return reactRedux.connect(state, dispatch)(component)\n}\n","/**\n * @param {number} max Upper bound (exclusive) for the random integer.\n * @return {number} A uniform random integer from `[0, max)`.\n */\nexport function randomInt (max) {\n  return Math.floor(Math.random() * max)\n}\n\n/**\n * @param {Array} array Array from which to pick a uniform random element.\n * @return {*} A uniform random element from the array.\n */\nexport function randomElement (array) {\n  return array[randomInt(array.length)]\n}\n\n/**\n * Shuffles the given array, in place.\n * @param {Array} array The array to shuffle.\n */\nexport function shuffle (array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = randomInt(i + 1)\n    const a = array[i]\n    const b = array[j]\n    array[i] = b\n    array[j] = a\n  }\n}\n","import defaults from 'lodash/defaults'\nimport { randomElement } from './random'\n\nconst clefs = ['treble', 'bass']\n\nconst notes = {\n  treble: {\n    root: [ 'c/4', 'g/4', 'c/5', 'g/5', 'c/6' ],\n    second: [ 'd/4', 'b/3', 'a/4', 'f/4', 'd/5', 'b/4', 'a/5', 'f/5', 'b/5', 'd/6' ],\n    third: [ 'a/3', 'e/4', 'e/4', 'b/4', 'a/4', 'e/5', 'e/5', 'b/5', 'a/5', 'e/6' ]\n  },\n  bass: {\n    root: [ 'c/4', 'f/3', 'c/3', 'f/2', 'c/2' ],\n    second: [ 'b/3', 'd/4', 'e/3', 'g/3', 'b/2', 'd/3', 'e/2', 'g/2', 'b/1', 'd/2' ],\n    third: [ 'a/3', 'e/4', 'd/3', 'a/3', 'a/2', 'e/3', 'd/2', 'a/2', 'a/1', 'e/2' ]\n  }\n}\n\nexport function sortNotes (noteArray) {\n  const noteValue = { c: 0, d: 1, e: 2, f: 3, g: 4, a: 5, b: 6 }\n  noteArray.sort((a, b) => {\n    const [aNote, aPos] = a.split('/')\n    const [bNote, bPos] = b.split('/')\n    const [aNum, bNum] = [Number(aPos), Number(bPos)]\n    if (aNum < bNum) return -1\n    if (bNum < aNum) return 1\n    const [aVal, bVal] = [noteValue[aNote], noteValue[bNote]]\n    return aVal < bVal ? -1 : 1\n  })\n}\n\nclass NoteGenerator {\n  randomClef () {\n    return randomElement(clefs)\n  }\n\n  randomNote (clef, opts = {}) {\n    const options = defaults({}, opts, {\n      root: true,\n      second: false,\n      third: false\n    })\n    const noteSelection = Array.from(new Set([].concat(\n      options.root ? notes[clef].root : [],\n      options.second ? notes[clef].second : [],\n      options.third ? notes[clef].third : []\n    )))\n    return randomElement(noteSelection)\n  }\n\n  next (opts = {}) {\n    const clef = this.randomClef()\n    const note = this.randomNote(clef, opts)\n    return { clef, note }\n  }\n}\n\nconst instance = new NoteGenerator()\nexport default instance\n","import Vex from 'vexflow'\n\nexport function renderNote (note, clef) {\n  const VF = Vex.Flow\n  const div = document.createElement('div')\n  const renderer = new VF.Renderer(div, VF.Renderer.Backends.SVG);\n\n  renderer.resize(220, 220);\n  const context = renderer.getContext();\n\n  const treble = new VF.Stave(20, 0, 190)\n  treble.addClef(\"treble\")\n  treble.setContext(context).draw()\n\n  const bass = new VF.Stave(20, 100, 190)\n  bass.addClef(\"bass\")\n  bass.setContext(context).draw()\n\n  const connector = new VF.StaveConnector(treble, bass)\n  connector.setType('singleLeft')\n  connector.setContext(context).draw()\n\n  const brace = new VF.StaveConnector(treble, bass)\n  brace.setType('brace')\n  brace.setContext(context).draw()\n\n  const notes = [\n    new VF.StaveNote({ clef, keys: [note], duration: \"w\" })\n  ]\n\n  const voice = new VF.Voice({ num_beats: 4, beat_value: 4 });\n  voice.addTickables(notes)\n\n  const formatter = new VF.Formatter()\n  formatter.joinVoices([voice]).format([voice], 150)\n\n  voice.draw(context, clef === 'treble' ? treble : bass)\n\n  return svgToDataUrl(div.querySelector('svg'))\n}\n\nexport function svgToDataUrl (svg) {\n  return `data:image/svg+xml;base64,${window.btoa(new XMLSerializer().serializeToString(svg))}`\n}\n","import Staff from './Staff'\nexport default Staff\n","import React from 'react'\nimport './Staff.scss'\n\nimport { renderNote } from '../../common/NoteRenderer'\n\nexport default function Staff ({ note, clef }) {\n  const src = renderNote(note, clef)\n  const alt = `Grand Staff displaying ${note} on the ${clef} clef.`\n  return <div className=\"Staff\"><img src={src} alt={alt} /></div>\n}\n","import React, { Component } from 'react'\nimport './App.css'\n\nimport { connect } from './App.props'\nimport NoteGenerator from '../../common/NoteGenerator'\nimport Staff from '../Staff'\n\nclass ConnectedApp extends Component {\n  constructor (props) {\n    super(props)\n    const { clef, note } = NoteGenerator.next()\n    this.state = { clef, note, visible: false }\n  }\n\n  get onMouseDown () {\n    return () => this.setState(prev => {\n      if (!prev.visible) {\n        return { visible: true }\n      }\n      const { clef, note } = NoteGenerator.next()\n      return { clef, note, visible: false }\n    })\n  }\n\n  render () {\n    const { note, clef, visible } = this.state\n    return (\n      <div className=\"App\" onMouseDown={this.onMouseDown}>\n        <h1>Landmark</h1>\n        <br />\n        <Staff note={note} clef={clef} />\n        <div className=\"Answer\">{visible ? note.replace('/', '').toUpperCase() : '?'}</div>\n      </div>\n    )\n  }\n}\n\nconst App = connect(ConnectedApp)\nexport default App\n","import App from './App'\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport settingsReducer from './settings'\n\nconst rootReducer = combineReducers({\n  settings: settingsReducer\n})\n\nexport default rootReducer\n","import { createStore } from 'redux'\nimport rootReducer from './reducers/root'\n\nconst DEVELOPMENT = true\n\nfunction loadSavedState () {\n  const storedState = localStorage.getItem('reduxState')\n  return storedState ? JSON.parse(storedState) : {}\n}\n\nfunction saveState () {\n  return DEVELOPMENT ? saveStateDev() : saveStateProd()\n}\n\nfunction saveStateProd () {\n  const state = store.getState()\n  localStorage.setItem('reduxState', JSON.stringify({ }))\n}\n\nfunction saveStateDev () {\n  const state = store.getState()\n  localStorage.setItem('reduxState', JSON.stringify({ }))\n}\n\nconst store = createStore(rootReducer, loadSavedState())\nstore.subscribe(saveState)\n\nwindow.store = {\n  reset () {\n    localStorage.removeItem('reduxState')\n    window.location.reload()\n  },\n  get state () {\n    return store.getState()\n  },\n  dispatch (action) {\n    return store.dispatch(action)\n  }\n}\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}