{"version":3,"sources":["component/App/App.props.js","common/random.js","reducers/util.js","reducers/settings.js","reducers/Reducer.js","reducers/root.js","store.js","common/NoteGenerator.js","common/NoteRenderer.js","component/SettingsMenu/SettingsMenu.props.js","component/FlexSelector/FlexSelector.js","component/FlexSelector/index.js","component/SettingsMenu/SettingsMenu.js","component/SettingsMenu/index.js","component/App/App.js","component/App/index.js","serviceWorker.js","index.js"],"names":["state","settings","dispatch","connect","component","reactRedux","randomInt","max","Math","floor","random","randomElement","array","length","randomBarDurations","durations","remaining","uniform","push","noop","type","payload","actionLog","method","action","message","prefix","exclude","Set","has","isString","isEmpty","startsWith","ActionLog","console","log","bind","warn","error","Settings","namespace","initialState","this","_initialState","actions","Map","validators","name","reducer","set","validator","get","err","defaultsDeep","oldObject","newValues","next","Object","assign","context","notes","root","second","third","showClefs","staff","theme","contexts","staffs","themes","setContext","setShowClefs","isBoolean","setStaff","setTheme","toggleNotes","key","rootReducer","combineReducers","settingsReducer","store","createStore","storedState","localStorage","getItem","JSON","parse","loadSavedState","subscribe","getState","setItem","stringify","window","reset","removeItem","location","reload","treble","bass","instance","clef","Array","from","concat","defaultNote","note","randomClef","randomNote","renderNote","getContext","div","Flow","Stave","addClef","draw","connector","StaveConnector","setType","brace","getNotes","altNotes","restNote","StaveNote","keys","duration","map","index","NoteGenerator","uniformRandomNote","stem_direction","n","value","split","getStemDirection","getOtherStaffNotes","mainClef","altClef","Formatter","FormatAndDraw","auto_beam","svgToDataUrl","querySelector","renderGrandStaffNote","renderBassStaffNote","renderTrebleStaffNote","svg","btoa","XMLSerializer","serializeToString","document","createElement","renderer","Renderer","Backends","SVG","resize","scale","setFillStyle","setStrokeStyle","noteIndex","setStyle","strokeStyle","fillStyle","FlexSelectorOption","children","selected","onClick","className","FlexSelector","optionEls","options","opt","label","SettingsMenu","visible","staffOptions","showClefOptions","noteOptions","themeOptions","contextOptions","Staff","props","src","alt","PureComponent","FlashCard","noteVisible","onMouseDown","replace","toUpperCase","App","settingsOpen","onToggleSettings","onFlashCardClick","setState","prev","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ffc17729.chunk.js","sourcesContent":["import * as reactRedux from 'react-redux'\n\nfunction state (state) {\n  const { settings } = state\n  return { settings }\n}\n\nfunction dispatch (dispatch) {\n  return {}\n}\n\nexport function connect (component) {\n  return reactRedux.connect(state, dispatch)(component)\n}\n","/**\n * @param {number} max Upper bound (exclusive) for the random integer.\n * @return {number} A uniform random integer from `[0, max)`.\n */\nexport function randomInt (max) {\n  return Math.floor(Math.random() * max)\n}\n\n/**\n * @param {Array} array Array from which to pick a uniform random element.\n * @return {*} A uniform random element from the array.\n */\nexport function randomElement (array) {\n  return array[randomInt(array.length)]\n}\n\n/**\n * Shuffles the given array, in place.\n * @param {Array} array The array to shuffle.\n */\nexport function shuffle (array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = randomInt(i + 1)\n    const a = array[i]\n    const b = array[j]\n    array[i] = b\n    array[j] = a\n  }\n}\n\n/**\n * @return {array} An array containing a randomly generated set of durations\n *   for a 4/4 bar containing whole, half, and quarter notes.\n */\nexport function randomBarDurations () {\n  const durations = []\n  let remaining = 8\n  while (remaining > 0) {\n    const uniform = Math.random()\n    if (uniform < 0.15 && remaining >= 8) {\n      durations.push('1')\n      remaining -= 8\n    } else if (uniform < 0.3 && remaining >= 4) {\n      durations.push('2')\n      remaining -= 4\n    } else {\n      durations.push('4')\n      remaining -= 2\n    }\n  }\n  return durations\n}\n","import isEmpty from 'lodash/isNil'\nimport isString from 'lodash/isString'\n\n/**\n * No operation action. Can be returned by action generators on invalid\n * payloads, etc.\n */\nexport const noop = { type: '', payload: {} }\n\n/**\n * Helper method for handling object updates within reducers.\n * @param {object} oldObject Object to update.\n * @param {object} newValues New values for the object.\n * @return {object} A copy of the old object with new values.\n */\nexport function updateObject (oldObject, newValues) {\n  return Object.assign({}, oldObject, newValues)\n}\n\n/**\n * Logs an action and message via the given logging method.\n * @param {function} method Logging method to use.\n * @param {object} action Redux action.\n * @param {string} message Log message.\n * @param {string} prefix Prefix filter.\n * @param {array<string>} exclude Actions to exclude from logging.\n */\nfunction actionLog (method, action, message = '', prefix = null, exclude = []) {\n  const excludeSet = new Set(exclude)\n  if (excludeSet.has(action.type)) {\n    return\n  }\n  if (isString(prefix) && !isEmpty(prefix) && !action.type.startsWith(prefix)) {\n    return\n  }\n  method(action.type, action.payload, message)\n}\n\n/**\n * Console logger for actions.\n * @author Ryan Sandor Richards\n */\nexport class ActionLog {\n  /**\n   * Logs the given redux action via `console.log`.\n   * @param {object} action Redux action to log.\n   * @param {string} message Message.\n   */\n  static log (action, message, prefix, exclude) {\n    actionLog(console.log.bind(console), action, message, prefix, exclude)\n  }\n\n  /**\n   * Logs the given redux action and message via `console.warn`.\n   * @param {object} action Redux action.\n   * @param {string} message Message.\n   */\n  static warn (action, message, prefix, exclude) {\n    actionLog(console.warn.bind(console), action, message, prefix, exclude)\n  }\n\n  /**\n   * Logs the given redux action and message via `console.error`.\n   * @param {object} action Redux action.\n   * @param {string} message Message.\n   */\n  static error (action, message, prefix, exclude) {\n    actionLog(console.error.bind(console), action, message, prefix, exclude)\n  }\n}\n","import isBoolean from 'lodash/isBoolean'\nimport Reducer from './Reducer'\n\nconst Settings = new Reducer('Landmark/settings', {\n  context: 'whole',\n  notes: {\n    root: true,\n    second: false,\n    third: false\n  },\n  showClefs: true,\n  staff: 'grand',\n  theme: 'light',\n})\n\nconst contexts = new Set(['whole', 'random-rests', 'random-notes'])\nconst staffs = new Set(['grand', 'treble', 'bass'])\nconst themes = new Set(['light', 'dark'])\n\nconst setContext = Settings.action('setContext', (next, payload) => {\n  if (contexts.has(payload.context)) {\n    next.context = payload.context\n  }\n})\n\nconst setShowClefs = Settings.action('setShowClefs', (next, payload) => {\n  if (isBoolean(payload.showClefs)) {\n    next.showClefs = payload.showClefs\n  }\n})\n\nconst setStaff = Settings.action('setStaff', (next, payload) => {\n  if (staffs.has(payload.staff)) {\n    next.staff = payload.staff\n  }\n})\n\nconst setTheme = Settings.action('setTheme', (next, payload) => {\n  const {theme} = payload\n  if (themes.has(theme)) {\n    next.theme = payload.theme\n  }\n})\n\nconst toggleNotes = Settings.action('toggleNotes', (next, payload) => {\n  const {root, second, third} = next.notes\n  switch (payload.key) {\n    case 'root':\n      next.notes.root = !root\n      return\n    case 'second':\n      next.notes.second = !second\n      return\n    case 'third':\n      next.notes.third = !third\n      return\n    default:\n  }\n})\n\nexport default Settings.reducer\nexport { setContext, setShowClefs, setStaff, setTheme, toggleNotes }\n","import { ActionLog, noop, updateObject } from './util'\nimport defaultsDeep from 'lodash/defaultsDeep'\n\nexport default class Reducer {\n  constructor (namespace, initialState = {}) {\n    this.namespace = namespace\n    this._initialState = initialState\n    this.actions = new Map()\n    this.validators = new Map()\n    this.log = false\n  }\n\n  get initialState () {\n    return defaultsDeep({}, this._initialState)\n  }\n\n  toggleLog () {\n    this.log = !this.log\n  }\n\n  action (name, reducer) {\n    if (!reducer) {\n      return this.actions.get(name)\n    }\n    this.actions.set(`${this.namespace}/${name}`, reducer)\n    return (payload = {}) => {\n      const action = { type: `${this.namespace}/${name}`, payload }\n      try {\n        const validator = this.validators.get(name) || (() => { })\n        validator(payload)\n        return action\n      } catch (err) {\n        ActionLog.error(action, err)\n        return noop\n      }\n    }\n  }\n\n  validate (name, validator) {\n    this.validators.set(`${this.namespace}/${name}`, validator)\n  }\n\n  get reducer () {\n    return (state, action) => {\n      if (this.log) ActionLog.log(action)\n      const next = updateObject(state || this.initialState, {})\n      if (this.actions.has(action.type)) {\n        this.actions.get(action.type)(next, action.payload, action)\n      }\n      return next\n    }\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport settingsReducer from './settings'\n\nconst rootReducer = combineReducers({\n  settings: settingsReducer\n})\n\nexport default rootReducer\n","import { createStore } from 'redux'\nimport rootReducer from './reducers/root'\n\nfunction loadSavedState () {\n  const storedState = localStorage.getItem('reduxState')\n  return storedState ? JSON.parse(storedState) : {}\n}\n\nfunction saveState () {\n  const { settings } = store.getState()\n  localStorage.setItem('reduxState', JSON.stringify({ settings }))\n}\n\nconst store = createStore(rootReducer, loadSavedState())\nstore.subscribe(saveState)\n\nwindow.store = {\n  reset () {\n    localStorage.removeItem('reduxState')\n    window.location.reload()\n  },\n  get state () {\n    return store.getState()\n  },\n  dispatch (action) {\n    return store.dispatch(action)\n  }\n}\n\nexport default store\n","import { randomElement } from './random'\nimport store from '../store'\n\nconst notes = {\n  treble: {\n    root: [ 'c/4', 'g/4', 'c/5', 'g/5', 'c/6' ],\n    second: [ 'd/4', 'b/3', 'a/4', 'f/4', 'd/5', 'b/4', 'a/5', 'f/5', 'b/5', 'd/6' ],\n    third: [ 'a/3', 'e/4', 'e/4', 'b/4', 'a/4', 'e/5', 'e/5', 'b/5', 'a/5', 'e/6' ]\n  },\n  bass: {\n    root: [ 'c/4', 'f/3', 'c/3', 'f/2', 'c/2' ],\n    second: [ 'b/3', 'd/4', 'e/3', 'g/3', 'b/2', 'd/3', 'e/2', 'g/2', 'b/1', 'd/2' ],\n    third: [ 'a/3', 'e/4', 'd/3', 'a/3', 'a/2', 'e/3', 'd/2', 'a/2', 'a/1', 'e/2' ]\n  }\n}\n\nexport function sortNotes (noteArray) {\n  const noteValue = { c: 0, d: 1, e: 2, f: 3, g: 4, a: 5, b: 6 }\n  noteArray.sort((a, b) => {\n    const [aNote, aPos] = a.split('/')\n    const [bNote, bPos] = b.split('/')\n    const [aNum, bNum] = [Number(aPos), Number(bPos)]\n    if (aNum < bNum) return -1\n    if (bNum < aNum) return 1\n    const [aVal, bVal] = [noteValue[aNote], noteValue[bNote]]\n    return aVal < bVal ? -1 : 1\n  })\n}\n\nclass NoteGenerator {\n  get settings () {\n    return store.getState().settings\n  }\n\n  randomClef () {\n    const { staff } = this.settings\n    switch (staff) {\n      case 'treble': return 'treble'\n      case 'bass': return 'bass'\n      default: return randomElement(['treble', 'bass'])\n    }\n  }\n\n  randomNote (clef) {\n    const noteSelection = Array.from(new Set([].concat(\n      this.settings.notes.root ? notes[clef].root : [],\n      this.settings.notes.second ? notes[clef].second : [],\n      this.settings.notes.third ? notes[clef].third : []\n    )))\n    return randomElement(noteSelection)\n  }\n\n  uniformRandomNote (clef) {\n    const noteSelection = Array.from(new Set([].concat(\n      notes[clef].root,\n      notes[clef].second,\n      notes[clef].third\n    )))\n    return randomElement(noteSelection)\n  }\n\n  next () {\n    const defaultNote = { clef: 'treble', note: 'c/4' }\n    const clef = this.randomClef()\n    if (!clef) return defaultNote\n    const note = this.randomNote(clef)\n    if (!note) return defaultNote\n    return { clef, note }\n  }\n}\n\nconst instance = new NoteGenerator()\nexport default instance\n","import { Flow } from 'vexflow'\nimport NoteGenerator from './NoteGenerator'\nimport { randomBarDurations, randomInt } from './random'\n\nexport function renderNote (clef, note, settings) {\n  const { staff } = settings\n  switch (staff) {\n    case 'grand': return renderGrandStaffNote(note, clef, settings)\n    case 'bass': return renderBassStaffNote(note, settings)\n    case 'treble': return renderTrebleStaffNote(note, settings)\n    default: return ''\n  }\n}\n\nfunction renderBassStaffNote (note, settings) {\n  const { context, div } = getContext(settings)\n  const notes = getNotes(note, 'bass', settings)\n  const bass = new Flow.Stave(0, 40, 185)\n  if (settings.showClefs) bass.addClef('bass')\n  bass.setContext(context).draw()\n  Flow.Formatter.FormatAndDraw(context, bass, notes, { auto_beam: true })\n  return svgToDataUrl(div.querySelector('svg'))\n}\n\nfunction renderTrebleStaffNote (note, settings) {\n  const { context, div } = getContext(settings)\n  const notes = getNotes(note, 'treble', settings)\n  const treble = new Flow.Stave(0, 40, 185)\n  if (settings.showClefs) treble.addClef('treble')\n  treble.setContext(context).draw()\n  Flow.Formatter.FormatAndDraw(context, treble, notes, { auto_beam: true })\n  return svgToDataUrl(div.querySelector('svg'))\n}\n\nfunction renderGrandStaffNote (note, clef, settings) {\n  const { context, div } = getContext(settings)\n\n  const treble = new Flow.Stave(20, 0, 160)\n  if (settings.showClefs) treble.addClef('treble')\n  treble.setContext(context).draw()\n\n  const bass = new Flow.Stave(20, 100, 160)\n  if (settings.showClefs) bass.addClef('bass')\n  bass.setContext(context).draw()\n\n  const connector = new Flow.StaveConnector(treble, bass)\n  connector.setType('singleLeft')\n  connector.setContext(context).draw()\n\n  if (settings.showClefs) {\n    const brace = new Flow.StaveConnector(treble, bass)\n    brace.setType('brace')\n    brace.setContext(context).draw()\n  }\n\n  const notes = getNotes(note, clef, settings)\n  const altNotes = getOtherStaffNotes(clef === 'bass' ? 'treble' : 'bass', settings)\n  const mainClef = (clef === 'bass') ? bass : treble\n  const altClef = (clef === 'bass') ? treble : bass\n  Flow.Formatter.FormatAndDraw(context, mainClef, notes, { auto_beam: true })\n  Flow.Formatter.FormatAndDraw(context, altClef, altNotes, { auto_beam: true })\n\n  return svgToDataUrl(div.querySelector('svg'))\n}\n\nfunction svgToDataUrl (svg) {\n  return `data:image/svg+xml;base64,${window.btoa(new XMLSerializer().serializeToString(svg))}`\n}\n\nfunction getContext (settings) {\n  const div = document.createElement('div')\n  const renderer = new Flow.Renderer(div, Flow.Renderer.Backends.SVG)\n  const context = renderer.getContext()\n  renderer.resize(325, 380)\n  context.scale(1.75, 1.75)\n\n  if (settings.theme === 'dark') {\n    context.setFillStyle('#efefe9')\n    context.setStrokeStyle('#efefe9')\n  }\n\n  return { context, div }\n}\n\nfunction getNotes (note, clef, settings) {\n  const { theme } = settings\n  let notes = []\n  const restNote = clef === 'bass' ? 'd/3' : 'b/4'\n\n  const getStemDirection = n => {\n    const value = n.split('/')[1]\n    if (clef === 'bass') return value >= 3 ? -1 : 1\n    if (clef === 'treble') return value >= 5 ? -1 : 1\n  }\n\n  if (settings.context === 'whole') {\n    notes = [ new Flow.StaveNote({ clef, keys: [note], duration: 'w' })]\n  } else if (settings.context === 'random-rests') {\n    const durations = randomBarDurations()\n    const noteIndex = randomInt(durations.length)\n    notes = durations.map((duration, index) => {\n      if (index === noteIndex) {\n        let stem_direction = getStemDirection(note)\n        return new Flow.StaveNote({ clef, keys: [note], duration, stem_direction })\n      }\n      return new Flow.StaveNote({ clef, keys: [restNote], duration: duration + 'r' })\n    })\n  } else {\n    const durations = randomBarDurations()\n    const noteIndex = randomInt(durations.length)\n    notes = durations.map((duration, index) => {\n      if (index === noteIndex) {\n        const stem_direction = getStemDirection(note)\n        const n = new Flow.StaveNote({ clef, keys: [note], duration, stem_direction })\n        if (theme === 'light') {\n          n.setStyle({ strokeStyle: '#169', fillStyle: '#169' })\n        } else if (theme === 'dark') {\n          n.setStyle({ strokeStyle: '#49d', fillStyle: '#49d' })\n        }\n        return n\n      } else {\n        const randomNote = NoteGenerator.uniformRandomNote(clef)\n        const stem_direction = getStemDirection(randomNote)\n        return new Flow.StaveNote({ clef, keys: [randomNote], duration, stem_direction })\n      }\n    })\n  }\n\n  return notes\n}\n\nfunction getOtherStaffNotes (clef, settings) {\n  const restNote = clef === 'bass' ? 'd/3' : 'b/4'\n\n  const getStemDirection = n => {\n    const value = n.split('/')[1]\n    if (clef === 'bass') return value >= 3 ? -1 : 1\n    if (clef === 'treble') return value >= 5 ? -1 : 1\n  }\n\n  if (settings.context === 'random-rests') {\n    return [new Flow.StaveNote({ clef, keys: [restNote], duration: 'wr' })]\n  }\n\n  if (settings.context === 'random-notes') {\n    const durations = randomBarDurations()\n    return durations.map((duration, index) => {\n      const randomNote = NoteGenerator.uniformRandomNote(clef)\n      const stem_direction = getStemDirection(randomNote)\n      return new Flow.StaveNote({ clef, keys: [randomNote], duration, stem_direction })\n    })\n  }\n\n  return []\n}\n","import * as reactRedux from 'react-redux'\nimport {\n  setContext,\n  setShowClefs,\n  setStaff,\n  setTheme,\n  toggleNotes\n} from '../../reducers/settings'\n\nfunction state (state) {\n  const { settings } = state\n  return { settings }\n}\n\nfunction dispatch (dispatch) {\n  return {\n    setContext: (context) => dispatch(setContext({ context })),\n    setShowClefs: (showClefs) => dispatch(setShowClefs({ showClefs })),\n    setStaff: (staff) => dispatch(setStaff({ staff })),\n    setTheme: (theme) => dispatch(setTheme({ theme })),\n    toggleNotes: (key) => dispatch(toggleNotes({ key })),\n  }\n}\n\nexport function connect (component) {\n  return reactRedux.connect(state, dispatch)(component)\n}\n","import React from 'react'\nimport './FlexSelector.scss'\n\nfunction FlexSelectorOption ({ children, selected, onClick }) {\n  const className = `FlexSelectorOption${selected ? ' selected' : ''}`\n  return (\n    <div className={className} onClick={onClick}>{children}</div>\n  )\n}\n\nexport default function FlexSelector ({ options }) {\n  const optionEls = options.map((opt, index) => (\n    <FlexSelectorOption key={index} selected={opt.selected} onClick={opt.onClick}>{opt.label}</FlexSelectorOption>\n  ))\n  return <div className=\"FlexSelector\">{optionEls}</div>\n}\n","import FlexSelector from './FlexSelector'\nexport default FlexSelector\n","import React from 'react'\nimport './SettingsMenu.scss'\n\nimport { connect } from './SettingsMenu.props'\nimport FlexSelector from '../FlexSelector'\n\nfunction ConnectedSettingsMenu ({ settings, setContext, setShowClefs, setStaff, setTheme, toggleNotes, visible }) {\n  if (!visible) return null\n\n  const { notes, showClefs, staff, theme } = settings\n\n  const staffOptions = [\n    { label: 'Grand (Piano)', selected: staff === 'grand', onClick: () => setStaff('grand') },\n    { label: 'Treble (G)', selected: staff === 'treble', onClick: () => setStaff('treble') },\n    { label: 'Bass (F)', selected: staff === 'bass', onClick: () => setStaff('bass') },\n  ]\n\n  const showClefOptions = [\n    { label: 'Show Clefs', selected: showClefs, onClick: () => setShowClefs(true) },\n    { label: 'Hide Clefs', selected: !showClefs, onClick: () => setShowClefs(false) },\n  ]\n\n  const noteOptions = [\n    { label: 'Root', selected: notes.root, onClick: () => toggleNotes('root') },\n    {\n      label: (<span>2<sup><small>nd</small></sup> &amp; 7<sup><small>th</small></sup></span>),\n      selected: notes.second,\n      onClick: () => toggleNotes('second')\n    },\n    {\n      label: (<span>3<sup><small>rd</small></sup> &amp; 6<sup><small>th</small></sup></span>),\n      selected: notes.third,\n      onClick: () => toggleNotes('third')\n    },\n  ]\n\n  const themeOptions = [\n    { label: 'Light', selected: theme === 'light', onClick: () => setTheme('light') },\n    { label: 'Dark', selected: theme === 'dark', onClick: () => setTheme('dark') },\n  ]\n\n  const contextOptions = [\n    { label: 'Whole', selected: settings.context === 'whole', onClick: () => setContext('whole') },\n    { label: 'Random (Rests)', selected: settings.context === 'random-rests', onClick: () => setContext('random-rests') },\n    { label: 'Random (Notes)', selected: settings.context === 'random-notes', onClick: () => setContext('random-notes') },\n  ]\n\n  return (\n    <div className=\"SettingsMenu\">\n      <h2>Settings</h2>\n\n      <div className=\"section\">\n        <h3>Staff</h3>\n        <FlexSelector options={staffOptions} />\n        <FlexSelector options={showClefOptions} />\n      </div>\n\n      <div className=\"section\">\n        <h3>Notes</h3>\n        <FlexSelector options={noteOptions} />\n        <FlexSelector options={contextOptions} />\n      </div>\n\n      <div className=\"section\">\n        <h3>Theme</h3>\n        <FlexSelector options={themeOptions} />\n      </div>\n    </div>\n  )\n}\n\nconst SettingsMenu = connect(ConnectedSettingsMenu)\nexport default SettingsMenu\n","import SettingsMenu from './SettingsMenu'\nexport default SettingsMenu\n","import React, { Component, PureComponent } from 'react'\nimport './App.scss'\n\nimport { connect } from './App.props'\nimport NoteGenerator from '../../common/NoteGenerator'\nimport { renderNote } from '../../common/NoteRenderer'\nimport SettingsMenu from '../SettingsMenu'\n\nclass Staff extends PureComponent {\n  render () {\n    const { clef, note, context, showClefs, staff, theme } = this.props\n    const src = renderNote(clef, note, { context, showClefs, staff, theme })\n    const alt = `Staff displaying ${note} on the ${clef} clef.`\n    return <div className=\"Staff\"><img src={src} alt={alt} /></div>\n  }\n}\n\nfunction ConnectedFlashCard ({ clef, note, noteVisible, onMouseDown, visible, settings }) {\n  if (!visible) return null\n  return (\n    <div className=\"FlashCard\" onMouseDown={onMouseDown}>\n      <Staff clef={clef}\n        note={note}\n        context={settings.context}\n        staff={settings.staff}\n        showClefs={settings.showClefs}\n        theme={settings.theme} />\n      <div className={`Answer ${noteVisible ? 'visible' : ''}`}>{noteVisible ? note.replace('/', '').toUpperCase() : '?'}</div>\n    </div>\n  )\n}\nconst FlashCard = connect(ConnectedFlashCard)\n\nclass ConnectedApp extends Component {\n  constructor (props) {\n    super(props)\n    const { clef, note } = NoteGenerator.next()\n    this.state = {\n      clef,\n      note,\n      noteVisible: false,\n      settingsOpen: false\n    }\n  }\n\n  get onFlashCardClick () {\n    return () => this.setState(prev => {\n      if (!prev.noteVisible) {\n        return { noteVisible: true }\n      }\n      const { clef, note } = NoteGenerator.next()\n      return { clef, note, noteVisible: false }\n    })\n  }\n\n  get onToggleSettings () {\n    return () => this.setState(prev => ({ settingsOpen: !prev.settingsOpen }))\n  }\n\n  render () {\n    return (\n      <div className={`App ${this.state.settingsOpen ? 'settings' : ''} theme-${this.props.settings.theme}`}>\n        <header className=\"clearfix\">\n          <h1>\n            Landmark\n            <div className=\"menu-toggle\" onClick={this.onToggleSettings}>\n              <i className=\"material-icons md-36\">menu</i>\n            </div>\n          </h1>\n        </header>\n        <main>\n          <FlashCard visible={!this.state.settingsOpen}\n            clef={this.state.clef}\n            note={this.state.note}\n            staff={this.props.settings.staff}\n            theme={this.props.settings.theme}\n            noteVisible={this.state.noteVisible}\n            onMouseDown={this.onFlashCardClick} />\n          <SettingsMenu visible={this.state.settingsOpen} />\n        </main>\n      </div>\n    )\n  }\n}\n\nconst App = connect(ConnectedApp)\nexport default App\n","import App from './App'\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}