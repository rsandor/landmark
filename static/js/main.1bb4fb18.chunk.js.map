{"version":3,"sources":["reducers/util.js","reducers/Reducer.js","reducers/timer.js","component/App/App.props.js","common/random.js","reducers/settings.js","reducers/root.js","store.js","common/NoteGenerator.js","common/NoteRenderer.js","component/SettingsMenu/SettingsMenu.props.js","component/FlexSelector/FlexSelector.js","component/FlexSelector/index.js","component/SettingsMenu/SettingsMenu.js","component/SettingsMenu/index.js","component/TimerMenu/TimerMenu.props.js","component/TimerMenu/TimerMenu.js","component/TimerMenu/index.js","component/App/App.js","component/App/index.js","serviceWorker.js","index.js"],"names":["noop","type","payload","actionLog","method","action","message","prefix","exclude","Set","has","isString","isEmpty","startsWith","ActionLog","console","log","bind","warn","error","Reducer","namespace","initialState","this","_initialState","actions","Map","validators","name","reducer","set","validator","get","err","defaultsDeep","state","oldObject","newValues","next","Object","assign","getCurrentTime","Math","floor","Date","getTime","format","time","currentTime","expiryTime","isNil","delta","minutes","seconds","Timer","duration","durations","states","setDuration","setState","updateCurrentTime","timer","settings","dispatch","connect","component","reactRedux","randomInt","max","random","randomElement","array","length","randomBarDurations","remaining","uniform","push","Settings","context","notes","root","second","third","showClefs","staff","theme","contexts","staffs","themes","setContext","setShowClefs","isBoolean","setStaff","setTheme","toggleNotes","key","rootReducer","combineReducers","settingsReducer","timerReducer","store","createStore","storedState","localStorage","getItem","JSON","parse","loadSavedState","subscribe","getState","setItem","stringify","window","reset","removeItem","location","reload","treble","bass","instance","clef","Array","from","concat","defaultNote","note","randomClef","randomNote","renderNote","getContext","div","Flow","Stave","addClef","draw","connector","StaveConnector","setType","brace","getNotes","altNotes","restNote","StaveNote","keys","map","index","NoteGenerator","uniformRandomNote","stem_direction","n","value","split","getStemDirection","getOtherStaffNotes","mainClef","altClef","Formatter","FormatAndDraw","auto_beam","svgToDataUrl","querySelector","renderGrandStaffNote","renderBassStaffNote","renderTrebleStaffNote","svg","btoa","XMLSerializer","serializeToString","document","createElement","renderer","Renderer","Backends","SVG","resize","scale","setFillStyle","setStrokeStyle","noteIndex","setStyle","strokeStyle","fillStyle","FlexSelectorOption","children","selected","onClick","className","FlexSelector","optionEls","options","opt","label","SettingsMenu","visible","staffOptions","showClefOptions","noteOptions","themeOptions","contextOptions","TimerMenu","onTimerStarted","durationOptions","Staff","props","src","alt","PureComponent","FlashCard","seed","noteVisible","onMouseDown","replace","toUpperCase","App","settingsOpen","timerOpen","timerInterval","setInterval","clearInterval","timerToggle","settingsToggle","isFlashCardVisible","onFlashCardClick","onToggleTimer","prev","onToggleSettings","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1bb4fb18.chunk.js","sourcesContent":["import isEmpty from 'lodash/isNil'\nimport isString from 'lodash/isString'\n\n/**\n * No operation action. Can be returned by action generators on invalid\n * payloads, etc.\n */\nexport const noop = { type: '', payload: {} }\n\n/**\n * Helper method for handling object updates within reducers.\n * @param {object} oldObject Object to update.\n * @param {object} newValues New values for the object.\n * @return {object} A copy of the old object with new values.\n */\nexport function updateObject (oldObject, newValues) {\n  return Object.assign({}, oldObject, newValues)\n}\n\n/**\n * Logs an action and message via the given logging method.\n * @param {function} method Logging method to use.\n * @param {object} action Redux action.\n * @param {string} message Log message.\n * @param {string} prefix Prefix filter.\n * @param {array<string>} exclude Actions to exclude from logging.\n */\nfunction actionLog (method, action, message = '', prefix = null, exclude = []) {\n  const excludeSet = new Set(exclude)\n  if (excludeSet.has(action.type)) {\n    return\n  }\n  if (isString(prefix) && !isEmpty(prefix) && !action.type.startsWith(prefix)) {\n    return\n  }\n  method(action.type, action.payload, message)\n}\n\n/**\n * Console logger for actions.\n * @author Ryan Sandor Richards\n */\nexport class ActionLog {\n  /**\n   * Logs the given redux action via `console.log`.\n   * @param {object} action Redux action to log.\n   * @param {string} message Message.\n   */\n  static log (action, message, prefix, exclude) {\n    actionLog(console.log.bind(console), action, message, prefix, exclude)\n  }\n\n  /**\n   * Logs the given redux action and message via `console.warn`.\n   * @param {object} action Redux action.\n   * @param {string} message Message.\n   */\n  static warn (action, message, prefix, exclude) {\n    actionLog(console.warn.bind(console), action, message, prefix, exclude)\n  }\n\n  /**\n   * Logs the given redux action and message via `console.error`.\n   * @param {object} action Redux action.\n   * @param {string} message Message.\n   */\n  static error (action, message, prefix, exclude) {\n    actionLog(console.error.bind(console), action, message, prefix, exclude)\n  }\n}\n","import { ActionLog, noop, updateObject } from './util'\nimport defaultsDeep from 'lodash/defaultsDeep'\n\nexport default class Reducer {\n  constructor (namespace, initialState = {}) {\n    this.namespace = namespace\n    this._initialState = initialState\n    this.actions = new Map()\n    this.validators = new Map()\n    this.log = false\n  }\n\n  get initialState () {\n    return defaultsDeep({}, this._initialState)\n  }\n\n  toggleLog () {\n    this.log = !this.log\n  }\n\n  action (name, reducer) {\n    if (!reducer) {\n      return this.actions.get(name)\n    }\n    this.actions.set(`${this.namespace}/${name}`, reducer)\n    return (payload = {}) => {\n      const action = { type: `${this.namespace}/${name}`, payload }\n      try {\n        const validator = this.validators.get(name) || (() => { })\n        validator(payload)\n        return action\n      } catch (err) {\n        ActionLog.error(action, err)\n        return noop\n      }\n    }\n  }\n\n  validate (name, validator) {\n    this.validators.set(`${this.namespace}/${name}`, validator)\n  }\n\n  get reducer () {\n    return (state, action) => {\n      if (this.log) ActionLog.log(action)\n      const next = updateObject(state || this.initialState, {})\n      if (this.actions.has(action.type)) {\n        this.actions.get(action.type)(next, action.payload, action)\n      }\n      return next\n    }\n  }\n}\n","import isNil from 'lodash/isNil'\nimport Reducer from './Reducer'\n\nfunction getCurrentTime () {\n  return Math.floor(new Date().getTime() / 1000)\n}\n\nfunction format (time) {\n  const { currentTime, expiryTime } = time\n  if (isNil(expiryTime) || isNil(currentTime)) {\n    return '00:00'\n  }\n\n  const delta = expiryTime - currentTime\n  if (delta < 0) {\n    return '00:00'\n  }\n\n  const minutes = Math.floor(delta / 60)\n  let seconds = delta - minutes * 60\n  if (seconds < 10) {\n    seconds = `0${seconds}`\n  }\n\n  return `${minutes}:${seconds}`\n}\n\nconst Timer = new Reducer('Landmark/timer', {\n  duration: 1,\n  state: 'stopped',\n  currentTime: getCurrentTime(),\n  expiryTime: null\n})\n\nconst durations = new Set([1, 5, 10, 15])\nconst states = new Set(['stopped', 'running'])\n\nconst setDuration = Timer.action('setDuration', (next, payload) => {\n  if (durations.has(payload.duration)) {\n    next.duration = payload.duration\n  }\n})\n\nconst setState = Timer.action('setState', (next, payload) => {\n  if (!states.has(payload.state)) return\n  if (next.state === 'stopped' && payload.state === 'running') {\n    next.expiryTime = getCurrentTime() + 60 * next.duration\n    next.state = 'running'\n  } else if (next.state === 'running' && payload.state === 'stopped') {\n    next.expiryTime = null\n    next.state = 'stopped'\n  }\n})\n\nconst updateCurrentTime = Timer.action('updateCurrentTime', next => {\n  next.currentTime = getCurrentTime()\n  if (next.expiryTime - next.currentTime <= 0) {\n    next.state = 'stopped'\n    next.expiryTime = null\n  }\n})\n\nexport default Timer.reducer\nexport { format, setDuration, setState, updateCurrentTime }\n","import * as reactRedux from 'react-redux'\nimport { updateCurrentTime } from '../../reducers/timer'\n\nfunction state (state) {\n  const { timer, settings } = state\n  return { timer, settings }\n}\n\nfunction dispatch (dispatch) {\n  return {\n    updateCurrentTime: () => dispatch(updateCurrentTime())\n  }\n}\n\nexport function connect (component) {\n  return reactRedux.connect(state, dispatch)(component)\n}\n","/**\n * @param {number} max Upper bound (exclusive) for the random integer.\n * @return {number} A uniform random integer from `[0, max)`.\n */\nexport function randomInt (max) {\n  return Math.floor(Math.random() * max)\n}\n\n/**\n * @param {Array} array Array from which to pick a uniform random element.\n * @return {*} A uniform random element from the array.\n */\nexport function randomElement (array) {\n  return array[randomInt(array.length)]\n}\n\n/**\n * Shuffles the given array, in place.\n * @param {Array} array The array to shuffle.\n */\nexport function shuffle (array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = randomInt(i + 1)\n    const a = array[i]\n    const b = array[j]\n    array[i] = b\n    array[j] = a\n  }\n}\n\n/**\n * @return {array} An array containing a randomly generated set of durations\n *   for a 4/4 bar containing whole, half, and quarter notes.\n */\nexport function randomBarDurations () {\n  const durations = []\n  let remaining = 8\n  while (remaining > 0) {\n    const uniform = Math.random()\n    if (uniform < 0.15 && remaining >= 8) {\n      durations.push('1')\n      remaining -= 8\n    } else if (uniform < 0.3 && remaining >= 4) {\n      durations.push('2')\n      remaining -= 4\n    } else {\n      durations.push('4')\n      remaining -= 2\n    }\n  }\n  return durations\n}\n","import isBoolean from 'lodash/isBoolean'\nimport Reducer from './Reducer'\n\nconst Settings = new Reducer('Landmark/settings', {\n  context: 'whole',\n  notes: {\n    root: true,\n    second: false,\n    third: false\n  },\n  showClefs: true,\n  staff: 'grand',\n  theme: 'light',\n})\n\nconst contexts = new Set(['whole', 'random-rests', 'random-notes'])\nconst staffs = new Set(['grand', 'treble', 'bass'])\nconst themes = new Set(['light', 'dark'])\n\nconst setContext = Settings.action('setContext', (next, payload) => {\n  if (contexts.has(payload.context)) {\n    next.context = payload.context\n  }\n})\n\nconst setShowClefs = Settings.action('setShowClefs', (next, payload) => {\n  if (isBoolean(payload.showClefs)) {\n    next.showClefs = payload.showClefs\n  }\n})\n\nconst setStaff = Settings.action('setStaff', (next, payload) => {\n  if (staffs.has(payload.staff)) {\n    next.staff = payload.staff\n  }\n})\n\nconst setTheme = Settings.action('setTheme', (next, payload) => {\n  const {theme} = payload\n  if (themes.has(theme)) {\n    next.theme = payload.theme\n  }\n})\n\nconst toggleNotes = Settings.action('toggleNotes', (next, payload) => {\n  const {root, second, third} = next.notes\n  switch (payload.key) {\n    case 'root':\n      next.notes.root = !root\n      return\n    case 'second':\n      next.notes.second = !second\n      return\n    case 'third':\n      next.notes.third = !third\n      return\n    default:\n  }\n})\n\nexport default Settings.reducer\nexport { setContext, setShowClefs, setStaff, setTheme, toggleNotes }\n","import { combineReducers } from 'redux'\n\nimport settingsReducer from './settings'\nimport timerReducer from './timer'\n\nconst rootReducer = combineReducers({\n  settings: settingsReducer,\n  timer: timerReducer\n})\n\nexport default rootReducer\n","import { createStore } from 'redux'\nimport rootReducer from './reducers/root'\n\nfunction loadSavedState () {\n  const storedState = localStorage.getItem('reduxState')\n  return storedState ? JSON.parse(storedState) : {}\n}\n\nfunction saveState () {\n  const { settings } = store.getState()\n  localStorage.setItem('reduxState', JSON.stringify({ settings }))\n}\n\nconst store = createStore(rootReducer, loadSavedState())\nstore.subscribe(saveState)\n\nwindow.store = {\n  reset () {\n    localStorage.removeItem('reduxState')\n    window.location.reload()\n  },\n  get state () {\n    return store.getState()\n  },\n  dispatch (action) {\n    return store.dispatch(action)\n  }\n}\n\nexport default store\n","import { randomElement } from './random'\nimport store from '../store'\n\nconst notes = {\n  treble: {\n    root: [ 'c/4', 'g/4', 'c/5', 'g/5', 'c/6' ],\n    second: [ 'd/4', 'b/3', 'a/4', 'f/4', 'd/5', 'b/4', 'a/5', 'f/5', 'b/5', 'd/6' ],\n    third: [ 'a/3', 'e/4', 'e/4', 'b/4', 'a/4', 'e/5', 'e/5', 'b/5', 'a/5', 'e/6' ]\n  },\n  bass: {\n    root: [ 'c/4', 'f/3', 'c/3', 'f/2', 'c/2' ],\n    second: [ 'b/3', 'd/4', 'e/3', 'g/3', 'b/2', 'd/3', 'e/2', 'g/2', 'b/1', 'd/2' ],\n    third: [ 'a/3', 'e/4', 'd/3', 'a/3', 'a/2', 'e/3', 'd/2', 'a/2', 'a/1', 'e/2' ]\n  }\n}\n\nexport function sortNotes (noteArray) {\n  const noteValue = { c: 0, d: 1, e: 2, f: 3, g: 4, a: 5, b: 6 }\n  noteArray.sort((a, b) => {\n    const [aNote, aPos] = a.split('/')\n    const [bNote, bPos] = b.split('/')\n    const [aNum, bNum] = [Number(aPos), Number(bPos)]\n    if (aNum < bNum) return -1\n    if (bNum < aNum) return 1\n    const [aVal, bVal] = [noteValue[aNote], noteValue[bNote]]\n    return aVal < bVal ? -1 : 1\n  })\n}\n\nclass NoteGenerator {\n  get settings () {\n    return store.getState().settings\n  }\n\n  randomClef () {\n    const { staff } = this.settings\n    switch (staff) {\n      case 'treble': return 'treble'\n      case 'bass': return 'bass'\n      default: return randomElement(['treble', 'bass'])\n    }\n  }\n\n  randomNote (clef) {\n    const noteSelection = Array.from(new Set([].concat(\n      this.settings.notes.root ? notes[clef].root : [],\n      this.settings.notes.second ? notes[clef].second : [],\n      this.settings.notes.third ? notes[clef].third : []\n    )))\n    return randomElement(noteSelection)\n  }\n\n  uniformRandomNote (clef) {\n    const noteSelection = Array.from(new Set([].concat(\n      notes[clef].root,\n      notes[clef].second,\n      notes[clef].third\n    )))\n    return randomElement(noteSelection)\n  }\n\n  next () {\n    const defaultNote = { clef: 'treble', note: 'c/4' }\n    const clef = this.randomClef()\n    if (!clef) return defaultNote\n    const note = this.randomNote(clef)\n    if (!note) return defaultNote\n    return { clef, note }\n  }\n}\n\nconst instance = new NoteGenerator()\nexport default instance\n","import { Flow } from 'vexflow'\nimport NoteGenerator from './NoteGenerator'\nimport { randomBarDurations, randomInt } from './random'\n\nexport function renderNote (clef, note, settings) {\n  const { staff } = settings\n  switch (staff) {\n    case 'grand': return renderGrandStaffNote(note, clef, settings)\n    case 'bass': return renderBassStaffNote(note, settings)\n    case 'treble': return renderTrebleStaffNote(note, settings)\n    default: return ''\n  }\n}\n\nfunction renderBassStaffNote (note, settings) {\n  const { context, div } = getContext(settings)\n  const notes = getNotes(note, 'bass', settings)\n  const bass = new Flow.Stave(0, 40, 185)\n  if (settings.showClefs) bass.addClef('bass')\n  bass.setContext(context).draw()\n  Flow.Formatter.FormatAndDraw(context, bass, notes, { auto_beam: true })\n  return svgToDataUrl(div.querySelector('svg'))\n}\n\nfunction renderTrebleStaffNote (note, settings) {\n  const { context, div } = getContext(settings)\n  const notes = getNotes(note, 'treble', settings)\n  const treble = new Flow.Stave(0, 40, 185)\n  if (settings.showClefs) treble.addClef('treble')\n  treble.setContext(context).draw()\n  Flow.Formatter.FormatAndDraw(context, treble, notes, { auto_beam: true })\n  return svgToDataUrl(div.querySelector('svg'))\n}\n\nfunction renderGrandStaffNote (note, clef, settings) {\n  const { context, div } = getContext(settings)\n\n  const treble = new Flow.Stave(20, 0, 160)\n  if (settings.showClefs) treble.addClef('treble')\n  treble.setContext(context).draw()\n\n  const bass = new Flow.Stave(20, 100, 160)\n  if (settings.showClefs) bass.addClef('bass')\n  bass.setContext(context).draw()\n\n  const connector = new Flow.StaveConnector(treble, bass)\n  connector.setType('singleLeft')\n  connector.setContext(context).draw()\n\n  if (settings.showClefs) {\n    const brace = new Flow.StaveConnector(treble, bass)\n    brace.setType('brace')\n    brace.setContext(context).draw()\n  }\n\n  const notes = getNotes(note, clef, settings)\n  const altNotes = getOtherStaffNotes(clef === 'bass' ? 'treble' : 'bass', settings)\n  const mainClef = (clef === 'bass') ? bass : treble\n  const altClef = (clef === 'bass') ? treble : bass\n  Flow.Formatter.FormatAndDraw(context, mainClef, notes, { auto_beam: true })\n  Flow.Formatter.FormatAndDraw(context, altClef, altNotes, { auto_beam: true })\n\n  return svgToDataUrl(div.querySelector('svg'))\n}\n\nfunction svgToDataUrl (svg) {\n  return `data:image/svg+xml;base64,${window.btoa(new XMLSerializer().serializeToString(svg))}`\n}\n\nfunction getContext (settings) {\n  const div = document.createElement('div')\n  const renderer = new Flow.Renderer(div, Flow.Renderer.Backends.SVG)\n  const context = renderer.getContext()\n  renderer.resize(325, 380)\n  context.scale(1.75, 1.75)\n\n  if (settings.theme === 'dark') {\n    context.setFillStyle('#efefe9')\n    context.setStrokeStyle('#efefe9')\n  }\n\n  return { context, div }\n}\n\nfunction getNotes (note, clef, settings) {\n  const { theme } = settings\n  let notes = []\n  const restNote = clef === 'bass' ? 'd/3' : 'b/4'\n\n  const getStemDirection = n => {\n    const value = n.split('/')[1]\n    if (clef === 'bass') return value >= 3 ? -1 : 1\n    if (clef === 'treble') return value >= 5 ? -1 : 1\n  }\n\n  if (settings.context === 'whole') {\n    notes = [ new Flow.StaveNote({ clef, keys: [note], duration: 'w' })]\n  } else if (settings.context === 'random-rests') {\n    const durations = randomBarDurations()\n    const noteIndex = randomInt(durations.length)\n    notes = durations.map((duration, index) => {\n      if (index === noteIndex) {\n        let stem_direction = getStemDirection(note)\n        return new Flow.StaveNote({ clef, keys: [note], duration, stem_direction })\n      }\n      return new Flow.StaveNote({ clef, keys: [restNote], duration: duration + 'r' })\n    })\n  } else {\n    const durations = randomBarDurations()\n    const noteIndex = randomInt(durations.length)\n    notes = durations.map((duration, index) => {\n      if (index === noteIndex) {\n        const stem_direction = getStemDirection(note)\n        const n = new Flow.StaveNote({ clef, keys: [note], duration, stem_direction })\n        if (theme === 'light') {\n          n.setStyle({ strokeStyle: '#169', fillStyle: '#169' })\n        } else if (theme === 'dark') {\n          n.setStyle({ strokeStyle: '#49d', fillStyle: '#49d' })\n        }\n        return n\n      } else {\n        const randomNote = NoteGenerator.uniformRandomNote(clef)\n        const stem_direction = getStemDirection(randomNote)\n        return new Flow.StaveNote({ clef, keys: [randomNote], duration, stem_direction })\n      }\n    })\n  }\n\n  return notes\n}\n\nfunction getOtherStaffNotes (clef, settings) {\n  const restNote = clef === 'bass' ? 'd/3' : 'b/4'\n\n  const getStemDirection = n => {\n    const value = n.split('/')[1]\n    if (clef === 'bass') return value >= 3 ? -1 : 1\n    if (clef === 'treble') return value >= 5 ? -1 : 1\n  }\n\n  if (settings.context === 'random-rests') {\n    return [new Flow.StaveNote({ clef, keys: [restNote], duration: 'wr' })]\n  }\n\n  if (settings.context === 'random-notes') {\n    const durations = randomBarDurations()\n    return durations.map((duration, index) => {\n      const randomNote = NoteGenerator.uniformRandomNote(clef)\n      const stem_direction = getStemDirection(randomNote)\n      return new Flow.StaveNote({ clef, keys: [randomNote], duration, stem_direction })\n    })\n  }\n\n  return []\n}\n","import * as reactRedux from 'react-redux'\nimport {\n  setContext,\n  setShowClefs,\n  setStaff,\n  setTheme,\n  toggleNotes\n} from '../../reducers/settings'\n\nfunction state (state) {\n  const { settings } = state\n  return { settings }\n}\n\nfunction dispatch (dispatch) {\n  return {\n    setContext: (context) => dispatch(setContext({ context })),\n    setShowClefs: (showClefs) => dispatch(setShowClefs({ showClefs })),\n    setStaff: (staff) => dispatch(setStaff({ staff })),\n    setTheme: (theme) => dispatch(setTheme({ theme })),\n    toggleNotes: (key) => dispatch(toggleNotes({ key })),\n  }\n}\n\nexport function connect (component) {\n  return reactRedux.connect(state, dispatch)(component)\n}\n","import React from 'react'\nimport './FlexSelector.scss'\n\nfunction FlexSelectorOption ({ children, selected, onClick }) {\n  const className = `FlexSelectorOption${selected ? ' selected' : ''}`\n  return (\n    <div className={className} onClick={onClick}>{children}</div>\n  )\n}\n\nexport default function FlexSelector ({ options }) {\n  const optionEls = options.map((opt, index) => (\n    <FlexSelectorOption key={index} selected={opt.selected} onClick={opt.onClick}>{opt.label}</FlexSelectorOption>\n  ))\n  return <div className=\"FlexSelector\">{optionEls}</div>\n}\n","import FlexSelector from './FlexSelector'\nexport default FlexSelector\n","import React from 'react'\nimport './SettingsMenu.scss'\n\nimport { connect } from './SettingsMenu.props'\nimport FlexSelector from '../FlexSelector'\n\nfunction ConnectedSettingsMenu ({ settings, setContext, setShowClefs, setStaff, setTheme, toggleNotes, visible }) {\n  if (!visible) return null\n\n  const { notes, showClefs, staff, theme } = settings\n\n  const staffOptions = [\n    { label: 'Grand (Piano)', selected: staff === 'grand', onClick: () => setStaff('grand') },\n    { label: 'Treble (G)', selected: staff === 'treble', onClick: () => setStaff('treble') },\n    { label: 'Bass (F)', selected: staff === 'bass', onClick: () => setStaff('bass') },\n  ]\n\n  const showClefOptions = [\n    { label: 'Show Clefs', selected: showClefs, onClick: () => setShowClefs(true) },\n    { label: 'Hide Clefs', selected: !showClefs, onClick: () => setShowClefs(false) },\n  ]\n\n  const noteOptions = [\n    { label: 'Root', selected: notes.root, onClick: () => toggleNotes('root') },\n    {\n      label: (<span>2<sup><small>nd</small></sup> &amp; 7<sup><small>th</small></sup></span>),\n      selected: notes.second,\n      onClick: () => toggleNotes('second')\n    },\n    {\n      label: (<span>3<sup><small>rd</small></sup> &amp; 6<sup><small>th</small></sup></span>),\n      selected: notes.third,\n      onClick: () => toggleNotes('third')\n    },\n  ]\n\n  const themeOptions = [\n    { label: 'Light', selected: theme === 'light', onClick: () => setTheme('light') },\n    { label: 'Dark', selected: theme === 'dark', onClick: () => setTheme('dark') },\n  ]\n\n  const contextOptions = [\n    { label: 'Whole', selected: settings.context === 'whole', onClick: () => setContext('whole') },\n    { label: 'Random (Rests)', selected: settings.context === 'random-rests', onClick: () => setContext('random-rests') },\n    { label: 'Random (Notes)', selected: settings.context === 'random-notes', onClick: () => setContext('random-notes') },\n  ]\n\n  return (\n    <div className=\"SettingsMenu menu\">\n      <h2>Settings</h2>\n\n      <div className=\"section\">\n        <h3>Staff</h3>\n        <FlexSelector options={staffOptions} />\n        <FlexSelector options={showClefOptions} />\n      </div>\n\n      <div className=\"section\">\n        <h3>Notes</h3>\n        <FlexSelector options={noteOptions} />\n        <FlexSelector options={contextOptions} />\n      </div>\n\n      <div className=\"section\">\n        <h3>Theme</h3>\n        <FlexSelector options={themeOptions} />\n      </div>\n    </div>\n  )\n}\n\nconst SettingsMenu = connect(ConnectedSettingsMenu)\nexport default SettingsMenu\n","import SettingsMenu from './SettingsMenu'\nexport default SettingsMenu\n","import * as reactRedux from 'react-redux'\n\nimport { setDuration, setState } from '../../reducers/timer'\n\nfunction state (state) {\n  const { timer } = state\n  return { timer }\n}\n\nfunction dispatch (dispatch) {\n  return {\n    setDuration: (duration) => dispatch(setDuration({ duration })),\n    setState: (state) => dispatch(setState({ state })),\n  }\n}\n\nexport function connect (component) {\n  return reactRedux.connect(state, dispatch)(component)\n}\n","import React from 'react'\nimport './TimerMenu.scss'\n\nimport { connect } from './TimerMenu.props'\nimport { format } from '../../reducers/timer'\nimport FlexSelector from '../FlexSelector'\n\nfunction ConnectedTimerMenu ({ visible, onTimerStarted, timer, setDuration, setState }) {\n  if (!visible) return null\n\n  const { duration } = timer\n\n  const durationOptions = [\n    { label: '1m', selected: duration === 1, onClick: () => setDuration(1) },\n    { label: '5m', selected: duration === 5, onClick: () => setDuration(5) },\n    { label: '10m', selected: duration === 10, onClick: () => setDuration(10) },\n    { label: '15m', selected: duration === 15, onClick: () => setDuration(15) },\n  ]\n\n  const toggleStart = () => {\n    if (timer.state === 'stopped') {\n      onTimerStarted()\n    }\n    setState((timer.state === 'stopped') ? 'running' : 'stopped')\n  }\n\n  return (\n    <div className=\"TimerMenu menu\">\n      <h2>Timer</h2>\n\n      <div className=\"section\">\n        <FlexSelector options={durationOptions} />\n      </div>\n\n      <div className=\"current-time section\">{format(timer)}</div>\n\n      <div className=\"controls section\">\n        <div className={`button${timer.state === 'running' ? ' red' : ''}`} onClick={toggleStart}>\n          {timer.state === 'stopped' ? 'Start' : 'Stop'}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst TimerMenu = connect(ConnectedTimerMenu)\nexport default TimerMenu\n","import TimerMenu from './TimerMenu'\nexport default TimerMenu\n","import React, { Component, PureComponent } from 'react'\nimport './App.scss'\n\nimport { connect } from './App.props'\nimport { format } from '../../reducers/timer'\nimport NoteGenerator from '../../common/NoteGenerator'\nimport { renderNote } from '../../common/NoteRenderer'\nimport SettingsMenu from '../SettingsMenu'\nimport TimerMenu from '../TimerMenu'\n\nclass Staff extends PureComponent {\n  render () {\n    const { clef, note, context, showClefs, staff, theme } = this.props\n    const src = renderNote(clef, note, { context, showClefs, staff, theme })\n    const alt = `Staff displaying ${note} on the ${clef} clef.`\n    return <div className=\"Staff\"><img src={src} alt={alt} /></div>\n  }\n}\n\nfunction ConnectedFlashCard ({ clef, note, seed, noteVisible, onMouseDown, visible, settings }) {\n  if (!visible) return null\n  return (\n    <div className=\"FlashCard\" onMouseDown={onMouseDown}>\n      <Staff clef={clef}\n        note={note}\n        seed={seed}\n        context={settings.context}\n        staff={settings.staff}\n        showClefs={settings.showClefs}\n        theme={settings.theme} />\n      <div className={`Answer ${noteVisible ? 'visible' : ''}`}>{noteVisible ? note.replace('/', '').toUpperCase() : '?'}</div>\n    </div>\n  )\n}\nconst FlashCard = connect(ConnectedFlashCard)\n\nclass ConnectedApp extends Component {\n  constructor (props) {\n    super(props)\n    const { clef, note } = NoteGenerator.next()\n    const seed = Math.random()\n    this.state = {\n      clef,\n      note,\n      seed,\n      noteVisible: false,\n      settingsOpen: false,\n      timerOpen: false\n    }\n    this.timerInterval = null\n  }\n\n  componentDidMount () {\n    if (!this.timerInterval) {\n      this.timerInterval = setInterval(() => this.props.updateCurrentTime(), 500)\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval)\n    }\n  }\n\n  get isFlashCardVisible () {\n    const { settingsOpen, timerOpen } = this.state\n    return !settingsOpen && !timerOpen\n  }\n\n  get onFlashCardClick () {\n    return () => this.setState(prev => {\n      if (!prev.noteVisible) {\n        return { noteVisible: true }\n      }\n      const { clef, note } = NoteGenerator.next()\n      const seed = Math.random()\n      return { clef, note, seed, noteVisible: false }\n    })\n  }\n\n  get onToggleSettings () {\n    return () => this.setState(prev => ({ settingsOpen: !prev.settingsOpen }))\n  }\n\n  get settingsToggle () {\n    if (this.state.timerOpen) return null\n    return (\n      <div className=\"menu-toggle\" onClick={this.onToggleSettings}>\n        <i className=\"material-icons md-36\">{this.state.settingsOpen ? 'close' : 'menu'}</i>\n      </div>\n    )\n  }\n\n  get onToggleTimer () {\n    return () => this.setState(prev => ({ timerOpen: !prev.timerOpen }))\n  }\n\n  get timerToggle () {\n    if (this.state.settingsOpen) return null\n    return (\n      <div className=\"timer-toggle\" onClick={this.onToggleTimer}>\n        <i className=\"material-icons md-36\">{this.state.timerOpen ? 'close' : 'timer' }</i>\n      </div>\n    )\n  }\n\n  get currentTime () {\n    if (this.props.timer.state !== 'running') return null\n    return (\n      <div className=\"current-time\">{format(this.props.timer)}</div>\n    )\n  }\n\n  render () {\n    return (\n      <div className={`App ${this.state.settingsOpen ? 'settings' : ''} theme-${this.props.settings.theme}`}>\n        <header className=\"clearfix\">\n          <h1>Landmark</h1>\n          {this.timerToggle}\n          {this.currentTime}\n          {this.settingsToggle}\n        </header>\n        <main>\n          <FlashCard visible={this.isFlashCardVisible}\n            clef={this.state.clef}\n            note={this.state.note}\n            seed={this.state.seed}\n            noteVisible={this.state.noteVisible}\n            onMouseDown={this.onFlashCardClick} />\n          <SettingsMenu visible={this.state.settingsOpen} />\n          <TimerMenu visible={this.state.timerOpen} onTimerStarted={this.onToggleTimer} />\n        </main>\n      </div>\n    )\n  }\n}\n\nconst App = connect(ConnectedApp)\nexport default App\n","import App from './App'\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}